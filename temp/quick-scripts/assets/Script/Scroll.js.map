{"version":3,"sources":["Scroll.js"],"names":["cc","Class","extends","Component","properties","image1","Node","image2","speed","start","update","dt","imageWidth1","width","imageWidth2","x"],"mappings":";;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEAA,GAAGC,KAAH,CAAS;AACLC,aAASF,GAAGG,SADP;;AAGLC,gBAAY;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACAC,gBAAQL,GAAGM,IAhBH;AAiBRC,gBAAQP,GAAGM,IAjBH;AAkBRE,eAAO;AAlBC,KAHP;;AAwBL;;AAEA;;AAEAC,SA5BK,mBA4BI,CAER,CA9BI;AAgCLC,UAhCK,kBAgCGC,EAhCH,EAgCO;AACR,YAAIC,cAAc,KAAKP,MAAL,CAAYQ,KAA9B;AACA,YAAIC,cAAc,KAAKP,MAAL,CAAYM,KAA9B;AACA,aAAKR,MAAL,CAAYU,CAAZ,GAAgB,KAAKV,MAAL,CAAYU,CAAZ,GAAiB,CAAC,KAAKP,KAAN,GAAcG,EAA/C;AACA,aAAKJ,MAAL,CAAYQ,CAAZ,GAAgB,KAAKR,MAAL,CAAYQ,CAAZ,GAAiB,CAAC,KAAKP,KAAN,GAAcG,EAA/C;;AAEA,YAAG,KAAKN,MAAL,CAAYU,CAAZ,IAAkB,CAACH,WAAtB,EAAoC;AAChC,iBAAKP,MAAL,CAAYU,CAAZ,GAAgB,KAAKR,MAAL,CAAYQ,CAAZ,GAAgBD,WAAhC;AACH;AACD,YAAG,KAAKP,MAAL,CAAYQ,CAAZ,IAAkB,CAACD,WAAtB,EAAoC;AAChC,iBAAKP,MAAL,CAAYQ,CAAZ,GAAgB,KAAKV,MAAL,CAAYU,CAAZ,GAAgBH,WAAhC;AACH;AACJ;AA5CI,CAAT","file":"Scroll.js","sourceRoot":"..\\..\\..\\..\\assets\\Script","sourcesContent":["// Learn cc.Class:\r\n//  - [Chinese] https://docs.cocos.com/creator/manual/zh/scripting/class.html\r\n//  - [English] http://docs.cocos2d-x.org/creator/manual/en/scripting/class.html\r\n// Learn Attribute:\r\n//  - [Chinese] https://docs.cocos.com/creator/manual/zh/scripting/reference/attributes.html\r\n//  - [English] http://docs.cocos2d-x.org/creator/manual/en/scripting/reference/attributes.html\r\n// Learn life-cycle callbacks:\r\n//  - [Chinese] https://docs.cocos.com/creator/manual/zh/scripting/life-cycle-callbacks.html\r\n//  - [English] https://www.cocos2d-x.org/docs/creator/manual/en/scripting/life-cycle-callbacks.html\r\n\r\ncc.Class({\r\n    extends: cc.Component,\r\n\r\n    properties: {\r\n        // foo: {\r\n        //     // ATTRIBUTES:\r\n        //     default: null,        // The default value will be used only when the component attaching\r\n        //                           // to a node for the first time\r\n        //     type: cc.SpriteFrame, // optional, default is typeof default\r\n        //     serializable: true,   // optional, default is true\r\n        // },\r\n        // bar: {\r\n        //     get () {\r\n        //         return this._bar;\r\n        //     },\r\n        //     set (value) {\r\n        //         this._bar = value;\r\n        //     }\r\n        // },\r\n        image1: cc.Node,\r\n        image2: cc.Node,\r\n        speed: 0\r\n    },\r\n\r\n    // LIFE-CYCLE CALLBACKS:\r\n\r\n    // onLoad () {},\r\n\r\n    start () {\r\n\r\n    },\r\n\r\n    update (dt) {\r\n        let imageWidth1 = this.image1.width;\r\n        let imageWidth2 = this.image2.width;\r\n        this.image1.x = this.image1.x + (-this.speed * dt);\r\n        this.image2.x = this.image2.x + (-this.speed * dt);\r\n\r\n        if(this.image1.x <= (-imageWidth1)) {\r\n            this.image1.x = this.image2.x + imageWidth2;\r\n        }\r\n        if(this.image2.x <= (-imageWidth2)) {\r\n            this.image2.x = this.image1.x + imageWidth1;\r\n        }\r\n    },\r\n});\r\n"]}