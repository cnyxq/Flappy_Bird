{"version":3,"sources":["Pipe.js"],"names":["cc","Class","extends","Component","properties","topPipe","Node","bottomPipe","medal","topMaxY","topMinY","maxSpace","minSpace","onLoad","y","Math","floor","random","space","start"],"mappings":";;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEAA,GAAGC,KAAH,CAAS;AACLC,aAASF,GAAGG,SADP;;AAGLC,gBAAY;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACAC,iBAASL,GAAGM,IAhBJ;AAiBRC,oBAAYP,GAAGM,IAjBP;AAkBRE,eAAOR,GAAGM,IAlBF;AAmBRG,iBAAS,CAnBD;AAoBRC,iBAAS,CApBD;AAqBRC,kBAAU,CArBF;AAsBRC,kBAAU;AAtBF,KAHP;;AA4BL;;AAEAC,UA9BK,oBA8BK;AACN,aAAKR,OAAL,CAAaS,CAAb,GAAiBC,KAAKC,KAAL,CAAYD,KAAKE,MAAL,MAAiB,KAAKR,OAAL,GAAe,KAAKC,OAArC,IAAgD,KAAKA,OAAjE,CAAjB;AACA,YAAIQ,QAAQH,KAAKC,KAAL,CAAYD,KAAKE,MAAL,MAAiB,KAAKN,QAAL,GAAgB,KAAKC,QAAtC,IAAkD,KAAKA,QAAnE,CAAZ;AACA,aAAKL,UAAL,CAAgBO,CAAhB,GAAoB,KAAKT,OAAL,CAAaS,CAAb,GAAiBI,KAArC;AACA,aAAKV,KAAL,CAAWM,CAAX,GAAe,KAAKT,OAAL,CAAaS,CAAb,GAAiB,CAAC,KAAKT,OAAL,CAAaS,CAAb,GAAiB,KAAKP,UAAL,CAAgBO,CAAlC,IAAqC,CAArE;AACH,KAnCI;AAqCLK,SArCK,mBAqCI,CAER;AAvCI;;AAyCL;AAzCJ","file":"Pipe.js","sourceRoot":"..\\..\\..\\..\\assets\\Script","sourcesContent":["// Learn cc.Class:\r\n//  - [Chinese] https://docs.cocos.com/creator/manual/zh/scripting/class.html\r\n//  - [English] http://docs.cocos2d-x.org/creator/manual/en/scripting/class.html\r\n// Learn Attribute:\r\n//  - [Chinese] https://docs.cocos.com/creator/manual/zh/scripting/reference/attributes.html\r\n//  - [English] http://docs.cocos2d-x.org/creator/manual/en/scripting/reference/attributes.html\r\n// Learn life-cycle callbacks:\r\n//  - [Chinese] https://docs.cocos.com/creator/manual/zh/scripting/life-cycle-callbacks.html\r\n//  - [English] https://www.cocos2d-x.org/docs/creator/manual/en/scripting/life-cycle-callbacks.html\r\n\r\ncc.Class({\r\n    extends: cc.Component,\r\n\r\n    properties: {\r\n        // foo: {\r\n        //     // ATTRIBUTES:\r\n        //     default: null,        // The default value will be used only when the component attaching\r\n        //                           // to a node for the first time\r\n        //     type: cc.SpriteFrame, // optional, default is typeof default\r\n        //     serializable: true,   // optional, default is true\r\n        // },\r\n        // bar: {\r\n        //     get () {\r\n        //         return this._bar;\r\n        //     },\r\n        //     set (value) {\r\n        //         this._bar = value;\r\n        //     }\r\n        // },\r\n        topPipe: cc.Node,\r\n        bottomPipe: cc.Node,\r\n        medal: cc.Node,\r\n        topMaxY: 0,\r\n        topMinY: 0,\r\n        maxSpace: 0,\r\n        minSpace: 0,\r\n    },\r\n\r\n    // LIFE-CYCLE CALLBACKS:\r\n\r\n    onLoad () {\r\n        this.topPipe.y = Math.floor((Math.random() * (this.topMaxY - this.topMinY) + this.topMinY));\r\n        let space = Math.floor((Math.random() * (this.maxSpace - this.minSpace) + this.minSpace));\r\n        this.bottomPipe.y = this.topPipe.y - space;\r\n        this.medal.y = this.topPipe.y - (this.topPipe.y - this.bottomPipe.y)/2;\r\n    },\r\n\r\n    start () {\r\n\r\n    },\r\n\r\n    // update (dt) {},\r\n});\r\n"]}